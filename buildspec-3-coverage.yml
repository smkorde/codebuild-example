version: 0.2
env:
  parameter-store:
    SONARQUBE_TOKEN: "42497bfdcc7c491854870224bb59b275dbf565b1"
    SONARQUBE_ENDPOINT: "https://sonarcloud.io"
phases:

 install:
   commands:
     #This file configures apt to remove it's cache after installs - we want this cache, so we remove this config
     - rm -f /etc/apt/apt.conf.d/docker-clean

     #Install required packages
     - |
         export DEBIAN_FRONTEND=noninteractive

         #Install php7.1
         apt-get update
         apt-get install -y  software-properties-common
         LC_ALL=C.UTF-8 add-apt-repository -y ppa:ondrej/php
         apt-get update

         # Install PHP 7.1.  The ondrej/php repository also contains other versions of php, try just changing the version number
         apt-get install -y php7.1\
                  php7.1-ldap \
                  php7.1-xml \
                  php7.1-xmlrpc \
                  php7.1-zip \
                  php7.1-mysql \
                  php7.1-mbstring \
                  php7.1-mcrypt \
                  php7.1-gd \
                  php7.1-readline \
                  php7.1-opcache \
                  php7.1-xdebug \
                  php7.1-dom \
                  php-xdebug \
                  php7.1-curl \
                  unzip

         #Enable xdebug - phpunit uses this for code coverage
         phpenmod xdebug

         #Install composer
         php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
         php composer-setup.php ;
         php -r "unlink('composer-setup.php');" ;
         mv composer.phar /usr/local/bin/composer

         #Various handy node based dev tools - do you need these during your build? Comment if not.
         #npm install -g gulp
         #npm install -g grunt
         #npm install -g webpack

     # Start Mysql if you need it
     # - apt-get install -y mysql-server
     # - su mysql -s /bin/bash -c "/usr/sbin/mysqld" &
       wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.4.0.2170-linux.zip
       unzip sonar-scanner-cli-4.4.0.2170-linux.zip
       export PATH=$PATH:./sonar-scanner-cli-4.4.0.2170-linux/bin/
 build:
   commands:
     - echo Build started on `date`
     - echo Installing composer deps
     - sonar-scanner
     - composer install --no-progress --no-suggest

 post_build:
   commands:
     - echo Build completed on `date`

     # Create a mysql database
     # Do you need to do this? In many cases phpunit will use sqllite or similar to avoid the need for a real DB.
     # If you don't need it delete it
     # - /usr/bin/mysql  -u root -e "GRANT ALL ON *.* TO 'test'@'localhost' IDENTIFIED BY '' WITH GRANT OPTION"
     # - mysqladmin -u test create test

     # Run your tests
     - ./vendor/bin/phpunit --coverage-html coverage

     - aws s3 sync --delete  coverage/ "s3://codebuild-example-coverage-report/coverage"


cache:
  paths:
    # Debian package caches, so we don't need to keep redownloading debian packages:
    - /var/cache/apt/**/*
    - /var/lib/apt/lists/**/*

    # Composer cache:
    - /root/.composer/**/*

    # Node modules, if you need nodejs based tools like webpack during your build
    - /root/.npm/**/*
    - /usr/lib/node_modules/**/*
